// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`tsconfig > sortTsconfigFile 1`] = `
{
  "alreadySorted": false,
  "tsconfig": "{
	"include": [
		"src/**/*"
	],
	"exclude": [
		"src/test/**/*"
	],
	// Compiler options below.
	"compilerOptions": {
		"rootDir": "src",
		"outDir": "built",
		"module": "Node16",
		"moduleResolution": "Node16", // This is a comment to the right.
		"declaration": true,
		"importHelpers": true,
		"strict": true,
		// Composite projects are a way to split a project into smaller pieces that can be built together.
		"composite": true,
		"esModuleInterop": true,
		"target": "es2019"
	},
	"bar": "bar",
	"foo": "foo",
	"ts-node": {
		"esm": true
	},
	"unknownKey1": "value1",
	"unknownKey2": "value2"
}",
}
`;

exports[`tsconfig > sortTsconfigFile with unknown keys 1`] = `
{
  "alreadySorted": false,
  "tsconfig": "{
	"include": [
		"src/**/*"
	],
	"exclude": [
		"src/test/**/*"
	],
	// Compiler options below.
	"compilerOptions": {
		"rootDir": "src",
		"outDir": "built",
		"module": "Node16",
		"moduleResolution": "Node16", // This is a comment to the right.
		"declaration": true,
		"importHelpers": true,
		"strict": true,
		// Composite projects are a way to split a project into smaller pieces that can be built together.
		"composite": true,
		"esModuleInterop": true,
		"target": "es2019"
	},
	"bar": "bar",
	"foo": "foo",
	"ts-node": {
		"esm": true
	},
	"unknownKey1": "value1",
	"unknownKey2": "value2"
}",
}
`;
