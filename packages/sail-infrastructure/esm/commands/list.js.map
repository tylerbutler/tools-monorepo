{"version":3,"file":"list.js","sourceRoot":"","sources":["../../src/commands/list.ts"],"names":[],"mappings":"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","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { Command, Flags } from \"@oclif/core\";\nimport colors from \"picocolors\";\n\nimport { getAllDependencies, loadBuildProject } from \"../buildProject.js\";\nimport type { IBuildProject } from \"../types.js\";\n\n/**\n * This command is intended for testing and debugging use only.\n */\nexport class ListCommand extends Command {\n\tstatic override description =\n\t\t\"List objects in the build project, like release groups, workspaces, and packages. USED FOR TESTING ONLY.\";\n\n\tstatic override flags = {\n\t\tpath: Flags.directory({\n\t\t\tdescription: \"Path to start searching for the Build project configuration.\",\n\t\t\tdefault: \".\",\n\t\t}),\n\t\tfull: Flags.boolean({\n\t\t\tdescription: \"Output the full report.\",\n\t\t}),\n\t} as const;\n\n\tasync run(): Promise<void> {\n\t\tconst { flags } = await this.parse(ListCommand);\n\t\tconst { path: searchPath, full } = flags;\n\n\t\t// load the BuildProject\n\t\tconst repo = loadBuildProject(searchPath);\n\t\t// eslint-disable-next-line unicorn/prefer-ternary\n\t\tif (full) {\n\t\t\tawait this.logFullReport(repo);\n\t\t} else {\n\t\t\tawait this.logCompactReport(repo);\n\t\t}\n\t}\n\n\tprivate async logFullReport(repo: IBuildProject): Promise<void> {\n\t\tthis.logIndent(colors.underline(\"Repository layout\"));\n\t\tfor (const workspace of repo.workspaces.values()) {\n\t\t\tthis.log();\n\t\t\tthis.logIndent(colors.blue(workspace.toString()), 1);\n\t\t\tfor (const releaseGroup of workspace.releaseGroups.values()) {\n\t\t\t\tthis.log();\n\t\t\t\tthis.logIndent(colors.green(releaseGroup.toString()), 2);\n\t\t\t\tthis.logIndent(colors.bold(\"Packages\"), 3);\n\t\t\t\tfor (const pkg of releaseGroup.packages) {\n\t\t\t\t\tconst pkgMessage = colors.white(\n\t\t\t\t\t\t`${pkg.name}${pkg.isReleaseGroupRoot ? colors.bold(\" (root)\") : \"\"}`,\n\t\t\t\t\t);\n\t\t\t\t\tthis.logIndent(pkgMessage, 4);\n\t\t\t\t}\n\n\t\t\t\tconst { releaseGroups, workspaces } = getAllDependencies(repo, releaseGroup.packages);\n\t\t\t\tif (releaseGroups.length > 0 || workspaces.length > 0) {\n\t\t\t\t\tthis.log();\n\t\t\t\t\tthis.logIndent(colors.bold(\"Depends on:\"), 3);\n\t\t\t\t\tfor (const depReleaseGroup of releaseGroups) {\n\t\t\t\t\t\tthis.logIndent(depReleaseGroup.toString(), 4);\n\t\t\t\t\t}\n\t\t\t\t\tfor (const depWorkspace of workspaces) {\n\t\t\t\t\t\tthis.logIndent(depWorkspace.toString(), 4);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async logCompactReport(repo: IBuildProject): Promise<void> {\n\t\tthis.logIndent(colors.underline(\"Repository layout\"));\n\t\tfor (const workspace of repo.workspaces.values()) {\n\t\t\tthis.log();\n\t\t\tthis.logIndent(colors.blue(workspace.toString()), 1);\n\t\t\tthis.logIndent(colors.bold(\"Packages\"), 2);\n\t\t\tfor (const pkg of workspace.packages) {\n\t\t\t\tconst pkgMessage = colors.white(\n\t\t\t\t\t`${pkg.isReleaseGroupRoot ? colors.bold(\"(root) \") : \"\"}${pkg.name} ${colors.black(colors.bgGreen(pkg.releaseGroup))}`,\n\t\t\t\t);\n\t\t\t\tthis.logIndent(pkgMessage, 3);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate logIndent(message: string, indent: number = 0): void {\n\t\tconst spaces = \" \".repeat(2 * indent);\n\t\tthis.log(`${spaces}${message}`);\n\t}\n}\n"]}