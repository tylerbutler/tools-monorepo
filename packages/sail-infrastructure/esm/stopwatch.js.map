{"version":3,"file":"stopwatch.js","sourceRoot":"","sources":["../src/stopwatch.ts"],"names":[],"mappings":"AAAA;;;GAGG;AAEH,OAAO,EAAE,aAAa,EAAE,MAAM,cAAc,CAAC;AAE7C;;;GAGG;AACH,MAAM,OAAO,SAAS;IAKH;IACP;IALH,QAAQ,GAAW,IAAI,CAAC,GAAG,EAAE,CAAC;IAC9B,SAAS,GAAW,CAAC,CAAC;IAE9B,YACkB,OAAgB,EACvB,UAAU,aAAa,CAAC,GAAG;QADpB,YAAO,GAAP,OAAO,CAAS;QACvB,YAAO,GAAP,OAAO,CAAoB;IACnC,CAAC;IAEG,GAAG,CAAC,GAAY,EAAE,KAAe;QACvC,MAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QAC5B,MAAM,QAAQ,GAAG,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC1C,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,MAAM,iBAAiB,GAAG,QAAQ,GAAG,IAAI,CAAC;QAC1C,IAAI,GAAG,KAAK,SAAS,EAAE,CAAC;YACvB,IAAI,IAAI,CAAC,OAAO,EAAE,CAAC;gBAClB,IAAI,QAAQ,GAAG,GAAG,EAAE,CAAC;oBACpB,IAAI,CAAC,OAAO,CAAC,GAAG,GAAG,MAAM,iBAAiB,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;gBAC3D,CAAC;qBAAM,CAAC;oBACP,IAAI,CAAC,OAAO,CAAC,GAAG,GAAG,MAAM,QAAQ,IAAI,CAAC,CAAC;gBACxC,CAAC;YACF,CAAC;iBAAM,IAAI,KAAK,KAAK,IAAI,EAAE,CAAC;gBAC3B,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;YACnB,CAAC;QACF,CAAC;QACD,IAAI,CAAC,SAAS,IAAI,QAAQ,CAAC;QAC3B,OAAO,iBAAiB,CAAC;IAC1B,CAAC;IAEM,YAAY;QAClB,OAAO,IAAI,CAAC,SAAS,CAAC;IACvB,CAAC;CACD","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { defaultLogger } from \"./logging.js\";\n\n/**\n * A stopwatch used for outputting messages to the terminal along with timestamp information.\n * The stopwatch is started upon creation, and each call to `log` will include the recorded time.\n */\nexport class Stopwatch {\n\tprivate lastTime: number = Date.now();\n\tprivate totalTime: number = 0;\n\n\tconstructor(\n\t\tprivate readonly enabled: boolean,\n\t\tprotected logFunc = defaultLogger.log,\n\t) {}\n\n\tpublic log(msg?: string, print?: boolean): number {\n\t\tconst currTime = Date.now();\n\t\tconst diffTime = currTime - this.lastTime;\n\t\tthis.lastTime = currTime;\n\t\tconst diffTimeInSeconds = diffTime / 1000;\n\t\tif (msg !== undefined) {\n\t\t\tif (this.enabled) {\n\t\t\t\tif (diffTime > 100) {\n\t\t\t\t\tthis.logFunc(`${msg} - ${diffTimeInSeconds.toFixed(3)}s`);\n\t\t\t\t} else {\n\t\t\t\t\tthis.logFunc(`${msg} - ${diffTime}ms`);\n\t\t\t\t}\n\t\t\t} else if (print === true) {\n\t\t\t\tthis.logFunc(msg);\n\t\t\t}\n\t\t}\n\t\tthis.totalTime += diffTime;\n\t\treturn diffTimeInSeconds;\n\t}\n\n\tpublic getTotalTime(): number {\n\t\treturn this.totalTime;\n\t}\n}\n"]}