{"version":3,"file":"git.test.js","sourceRoot":"","sources":["../../src/test/git.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { strict as assert } from \"node:assert\";\nimport { unlink } from \"node:fs/promises\";\nimport * as os from \"node:os\";\nimport * as path from \"node:path\";\n\nimport { expect } from \"chai\";\nimport { readJson, writeJson } from \"fs-extra/esm\";\nimport { describe, it } from \"mocha\";\nimport { CleanOptions, simpleGit } from \"simple-git\";\n\nimport { loadBuildProject } from \"../buildProject.js\";\nimport { NotInGitRepository } from \"../errors.js\";\nimport { findGitRootSync, getChangedSinceRef, getFiles, getRemote } from \"../git.js\";\nimport type { PackageJson } from \"../types.js\";\n\nimport { packageRootPath, testRepoRoot } from \"./init.js\";\n\ndescribe(\"findGitRootSync\", () => {\n\tit(\"finds root\", () => {\n\t\t// This is the path to the current repo, because when tests are executed the working directory is\n\t\t// the root of this package: build-tools/packages/build-infrastructure\n\t\tconst expected = path.resolve(packageRootPath, \"../../..\");\n\t\tconst actual = findGitRootSync(process.cwd());\n\t\tassert.strictEqual(actual, expected);\n\t});\n\n\tit(\"throws outside git repo\", () => {\n\t\tassert.throws(() => {\n\t\t\tfindGitRootSync(os.tmpdir());\n\t\t}, NotInGitRepository);\n\t});\n});\n\ndescribe(\"getRemote\", () => {\n\tconst git = simpleGit(process.cwd());\n\n\tit(\"finds upstream remote\", async () => {\n\t\tconst actual = await getRemote(git, \"microsoft/FluidFramework\");\n\t\texpect(actual).not.to.be.undefined;\n\t});\n\n\tit(\"missing remote returns undefined\", async () => {\n\t\tconst actual = await getRemote(git, \"foo/bar\");\n\t\texpect(actual).to.be.undefined;\n\t});\n});\n\ndescribe(\"getChangedSinceRef: local\", () => {\n\tconst git = simpleGit(process.cwd());\n\tconst repo = loadBuildProject(testRepoRoot);\n\n\tbeforeEach(async () => {\n\t\t// create a file\n\t\tconst newFile = path.join(testRepoRoot, \"second/newFile.json\");\n\t\tawait writeJson(newFile, '{\"foo\": \"bar\"}');\n\t\tawait git.add(newFile);\n\n\t\t// delete a file\n\t\tawait unlink(path.join(testRepoRoot, \"packages/group3/pkg-f/src/index.mjs\"));\n\n\t\t// edit a file\n\t\tconst pkgJson = path.join(testRepoRoot, \"packages/group3/pkg-f/package.json\");\n\t\tconst json = (await readJson(pkgJson)) as PackageJson & { author?: string };\n\t\tjson.author = \"edited field\";\n\t\tawait writeJson(pkgJson, json);\n\t});\n\n\tafterEach(async () => {\n\t\tawait git.reset([\"HEAD\", \"--\", testRepoRoot]);\n\t\tawait git.checkout([\"HEAD\", \"--\", testRepoRoot]);\n\t\tawait git.clean(CleanOptions.FORCE, [testRepoRoot]);\n\t});\n\n\tit(\"returns correct files\", async () => {\n\t\tconst { files } = await getChangedSinceRef(repo, \"HEAD\");\n\n\t\texpect(files).to.be.containingAllOf([\n\t\t\t\"packages/group3/pkg-f/package.json\",\n\t\t\t\"packages/group3/pkg-f/src/index.mjs\",\n\t\t\t\"second/newFile.json\",\n\t\t]);\n\t\texpect(files).to.be.ofSize(3);\n\t});\n\n\tit(\"returns correct dirs\", async () => {\n\t\tconst { dirs } = await getChangedSinceRef(repo, \"HEAD\");\n\n\t\texpect(dirs).to.be.containingAllOf([\n\t\t\t\"packages/group3/pkg-f\",\n\t\t\t\"packages/group3/pkg-f/src\",\n\t\t\t\"second\",\n\t\t]);\n\t\texpect(dirs).to.be.ofSize(3);\n\t});\n\n\tit(\"returns correct packages\", async () => {\n\t\tconst { packages } = await getChangedSinceRef(repo, \"HEAD\");\n\n\t\texpect(packages.map((p) => p.name)).to.be.containingAllOf([\n\t\t\t\"@group3/pkg-f\",\n\t\t\t\"second-release-group-root\",\n\t\t]);\n\t\texpect(packages).to.be.ofSize(2);\n\t});\n\n\tit(\"returns correct release groups\", async () => {\n\t\tconst { releaseGroups } = await getChangedSinceRef(repo, \"HEAD\");\n\n\t\texpect(releaseGroups.map((p) => p.name)).to.be.containingAllOf([\n\t\t\t\"group3\",\n\t\t\t\"second-release-group\",\n\t\t]);\n\t\texpect(releaseGroups).to.be.ofSize(2);\n\t});\n\n\tit(\"returns correct workspaces\", async () => {\n\t\tconst { workspaces } = await getChangedSinceRef(repo, \"HEAD\");\n\n\t\texpect(workspaces.map((p) => p.name)).to.be.containingAllOf([\"main\", \"second\"]);\n\t\texpect(workspaces).to.be.ofSize(2);\n\t});\n});\n\ndescribe(\"getFiles\", () => {\n\tconst git = simpleGit(process.cwd());\n\tconst gitRoot = findGitRootSync();\n\n\tit(\"correct files with clean working directory\", async () => {\n\t\tconst actual = await getFiles(git, testRepoRoot);\n\n\t\texpect(actual).to.be.containingAllOf(\n\t\t\t[\n\t\t\t\t`${testRepoRoot}/.changeset/README.md`,\n\t\t\t\t`${testRepoRoot}/.changeset/bump-main-group-minor.md`,\n\t\t\t\t`${testRepoRoot}/.changeset/config.json`,\n\t\t\t\t`${testRepoRoot}/fluidBuild.config.cjs`,\n\t\t\t\t`${testRepoRoot}/package.json`,\n\t\t\t\t`${testRepoRoot}/packages/group2/pkg-d/package.json`,\n\t\t\t\t`${testRepoRoot}/packages/group2/pkg-e/package.json`,\n\t\t\t\t`${testRepoRoot}/packages/group3/pkg-f/package.json`,\n\t\t\t\t`${testRepoRoot}/packages/group3/pkg-f/src/index.mjs`,\n\t\t\t\t`${testRepoRoot}/packages/group3/pkg-g/package.json`,\n\t\t\t\t`${testRepoRoot}/packages/pkg-a/package.json`,\n\t\t\t\t`${testRepoRoot}/packages/pkg-b/package.json`,\n\t\t\t\t`${testRepoRoot}/packages/pkg-c/package.json`,\n\t\t\t\t`${testRepoRoot}/packages/shared/package.json`,\n\t\t\t\t`${testRepoRoot}/pnpm-lock.yaml`,\n\t\t\t\t`${testRepoRoot}/pnpm-workspace.yaml`,\n\t\t\t\t`${testRepoRoot}/second/package.json`,\n\t\t\t\t`${testRepoRoot}/second/packages/other-pkg-a/package.json`,\n\t\t\t\t`${testRepoRoot}/second/packages/other-pkg-b/package.json`,\n\t\t\t\t`${testRepoRoot}/second/pnpm-lock.yaml`,\n\t\t\t\t`${testRepoRoot}/second/pnpm-workspace.yaml`,\n\t\t\t].map((p) => path.relative(gitRoot, p)),\n\t\t);\n\t});\n});\n"]}