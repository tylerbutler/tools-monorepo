{"version":3,"file":"filter.test.js","sourceRoot":"","sources":["../../src/test/filter.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { assert, expect } from \"chai\";\nimport * as chai from \"chai\";\nimport assertArrays from \"chai-arrays\";\n\nimport { loadBuildProject } from \"../buildProject.js\";\nimport {\n\tAllPackagesSelectionCriteria,\n\tEmptySelectionCriteria,\n\ttype PackageFilterOptions,\n\ttype PackageSelectionCriteria,\n\tfilterPackages,\n\tselectAndFilterPackages,\n} from \"../filter.js\";\nimport type { IBuildProject, IPackage, WorkspaceName } from \"../types.js\";\n\nimport { testRepoRoot } from \"./init.js\";\n\n// const __dirname = path.dirname(fileURLToPath(import.meta.url));\n\nchai.use(assertArrays);\n\nconst EmptyFilter: PackageFilterOptions = {\n\tprivate: undefined,\n\tscope: undefined,\n\tskipScope: undefined,\n};\n\nasync function getBuildProject(): Promise<IBuildProject> {\n\tconst fluidRepo = loadBuildProject(testRepoRoot, false, \"microsoft/FluidFramework\");\n\treturn fluidRepo;\n}\n\nasync function getMainWorkspacePackages(): Promise<IPackage[]> {\n\tconst fluidRepo = await getBuildProject();\n\tconst packages = fluidRepo.workspaces.get(\"main\" as WorkspaceName)?.packages;\n\tassert(packages !== undefined);\n\treturn packages;\n}\n\ndescribe(\"filterPackages\", () => {\n\tit(\"no filters\", async () => {\n\t\tconst packages = await getMainWorkspacePackages();\n\t\tconst filters = EmptyFilter;\n\n\t\tconst actual = await filterPackages(packages, filters);\n\t\tconst names = actual.map((p) => p.name);\n\t\texpect(names).to.be.equalTo([\n\t\t\t\"main-release-group-root\",\n\t\t\t\"@group2/pkg-d\",\n\t\t\t\"@group2/pkg-e\",\n\t\t\t\"@group3/pkg-f\",\n\t\t\t\"@group3/pkg-g\",\n\t\t\t\"pkg-a\",\n\t\t\t\"pkg-b\",\n\t\t\t\"@private/pkg-c\",\n\t\t\t\"@shared/shared\",\n\t\t]);\n\t});\n\n\tit(\"private=true\", async () => {\n\t\tconst packages = await getMainWorkspacePackages();\n\t\tconst filters = { ...EmptyFilter, private: true };\n\t\tconst actual = await filterPackages(packages, filters);\n\t\tconst names = actual.map((p) => p.name);\n\t\texpect(names).to.be.containingAllOf([\"@private/pkg-c\"]);\n\t\texpect(names).to.be.ofSize(1);\n\t});\n\n\tit(\"private=false\", async () => {\n\t\tconst packages = await getMainWorkspacePackages();\n\t\tconst filters = { ...EmptyFilter, private: false };\n\t\tconst actual = await filterPackages(packages, filters);\n\t\tconst names = actual.map((p) => p.name);\n\t\texpect(names).to.be.equalTo([\n\t\t\t\"main-release-group-root\",\n\t\t\t\"@group2/pkg-d\",\n\t\t\t\"@group2/pkg-e\",\n\t\t\t\"@group3/pkg-f\",\n\t\t\t\"@group3/pkg-g\",\n\t\t\t\"pkg-a\",\n\t\t\t\"pkg-b\",\n\t\t\t\"@shared/shared\",\n\t\t]);\n\t});\n\n\tit(\"multiple scopes\", async () => {\n\t\tconst packages = await getMainWorkspacePackages();\n\t\tconst filters: PackageFilterOptions = {\n\t\t\tprivate: undefined,\n\t\t\tscope: [\"@shared\", \"@private\"],\n\t\t\tskipScope: undefined,\n\t\t};\n\t\tconst actual = await filterPackages(packages, filters);\n\t\tconst names = actual.map((p) => p.name);\n\t\texpect(names).to.be.containingAllOf([\"@shared/shared\", \"@private/pkg-c\"]);\n\t});\n\n\tit(\"multiple skipScopes\", async () => {\n\t\tconst packages = await getMainWorkspacePackages();\n\t\tconst filters: PackageFilterOptions = {\n\t\t\t...EmptyFilter,\n\t\t\tskipScope: [\"@shared\", \"@private\", \"@group3\"],\n\t\t};\n\t\tconst actual = await filterPackages(packages, filters);\n\t\tconst names = actual.map((p) => p.name);\n\t\texpect(names).to.be.equalTo([\n\t\t\t\"main-release-group-root\",\n\t\t\t\"@group2/pkg-d\",\n\t\t\t\"@group2/pkg-e\",\n\t\t\t\"pkg-a\",\n\t\t\t\"pkg-b\",\n\t\t]);\n\t});\n\n\tit(\"scope and skipScope\", async () => {\n\t\tconst packages = await getMainWorkspacePackages();\n\t\tconst filters: PackageFilterOptions = {\n\t\t\t...EmptyFilter,\n\t\t\tscope: [\"@shared\", \"@private\"],\n\t\t\tskipScope: [\"@shared\"],\n\t\t};\n\t\tconst actual = await filterPackages(packages, filters);\n\t\tconst names = actual.map((p) => p.name);\n\t\texpect(names).to.be.equalTo([\"@private/pkg-c\"]);\n\t});\n});\n\ndescribe(\"selectAndFilterPackages\", () => {\n\tconst fluidRepoPromise = getBuildProject();\n\n\tit(\"all, no filters\", async () => {\n\t\tconst fluidRepo = await fluidRepoPromise;\n\t\tconst selectionOptions = AllPackagesSelectionCriteria;\n\t\tconst filter = EmptyFilter;\n\n\t\tconst { selected } = await selectAndFilterPackages(fluidRepo, selectionOptions, filter);\n\t\tconst names = selected.map((p) => p.name).sort();\n\n\t\texpect(names).to.be.equalTo([\n\t\t\t\"@group2/pkg-d\",\n\t\t\t\"@group2/pkg-e\",\n\t\t\t\"@group3/pkg-f\",\n\t\t\t\"@group3/pkg-g\",\n\t\t\t\"@private/pkg-c\",\n\t\t\t\"@shared/shared\",\n\t\t\t\"main-release-group-root\",\n\t\t\t\"other-pkg-a\",\n\t\t\t\"other-pkg-b\",\n\t\t\t\"pkg-a\",\n\t\t\t\"pkg-b\",\n\t\t\t\"second-release-group-root\",\n\t\t]);\n\t});\n\n\tit(\"select directory\", async () => {\n\t\tconst fluidRepo = await fluidRepoPromise;\n\t\tconst selectionOptions: PackageSelectionCriteria = {\n\t\t\treleaseGroups: [\"main\"],\n\t\t\treleaseGroupRoots: [],\n\t\t\tworkspaces: [],\n\t\t\tworkspaceRoots: [],\n\t\t\tdirectory: \"second/packages/other-pkg-a\",\n\t\t\tchangedSinceBranch: undefined,\n\t\t};\n\t\tconst filters: PackageFilterOptions = {\n\t\t\tprivate: undefined,\n\t\t\tscope: undefined,\n\t\t\tskipScope: undefined,\n\t\t};\n\n\t\tconst { selected, filtered } = await selectAndFilterPackages(\n\t\t\tfluidRepo,\n\t\t\tselectionOptions,\n\t\t\tfilters,\n\t\t);\n\t\texpect(selected).to.be.ofSize(1);\n\t\texpect(filtered).to.be.ofSize(1);\n\n\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\tconst pkg = filtered[0]!;\n\n\t\texpect(pkg.name).to.equal(\"other-pkg-a\");\n\t\texpect(fluidRepo.relativeToRepo(pkg.directory)).to.equal(\"second/packages/other-pkg-a\");\n\t});\n\n\tdescribe(\"select release group\", () => {\n\t\tit(\"no filters\", async () => {\n\t\t\tconst fluidRepo = await fluidRepoPromise;\n\t\t\tconst selectionOptions: PackageSelectionCriteria = {\n\t\t\t\t...EmptySelectionCriteria,\n\t\t\t\treleaseGroups: [\"main\"],\n\t\t\t};\n\t\t\tconst filters: PackageFilterOptions = EmptyFilter;\n\n\t\t\tconst { selected } = await selectAndFilterPackages(fluidRepo, selectionOptions, filters);\n\t\t\tconst names = selected.map((p) => p.name);\n\n\t\t\texpect(names).to.be.equalTo([\"pkg-a\", \"pkg-b\", \"@private/pkg-c\", \"@shared/shared\"]);\n\t\t});\n\n\t\tit(\"select release group root\", async () => {\n\t\t\tconst fluidRepo = await fluidRepoPromise;\n\t\t\tconst selectionOptions: PackageSelectionCriteria = {\n\t\t\t\t...EmptySelectionCriteria,\n\t\t\t\treleaseGroupRoots: [\"main\"],\n\t\t\t};\n\t\t\tconst filters: PackageFilterOptions = EmptyFilter;\n\n\t\t\tconst { selected } = await selectAndFilterPackages(fluidRepo, selectionOptions, filters);\n\t\t\tconst dirs = selected.map((p) => fluidRepo.relativeToRepo(p.directory));\n\n\t\t\texpect(selected.length).to.equal(1);\n\t\t\texpect(dirs).to.be.containingAllOf([\"\"]);\n\t\t});\n\n\t\tit(\"filter private\", async () => {\n\t\t\tconst fluidRepo = await fluidRepoPromise;\n\t\t\tconst selectionOptions: PackageSelectionCriteria = {\n\t\t\t\t...EmptySelectionCriteria,\n\t\t\t\treleaseGroups: [\"main\"],\n\t\t\t};\n\t\t\tconst filters: PackageFilterOptions = {\n\t\t\t\t...EmptyFilter,\n\t\t\t\tprivate: true,\n\t\t\t};\n\n\t\t\tconst { filtered } = await selectAndFilterPackages(fluidRepo, selectionOptions, filters);\n\t\t\tconst names = filtered.map((p) => p.name);\n\n\t\t\texpect(names).to.be.containingAllOf([\"@private/pkg-c\"]);\n\t\t});\n\n\t\tit(\"filter non-private\", async () => {\n\t\t\tconst fluidRepo = await fluidRepoPromise;\n\t\t\tconst selectionOptions: PackageSelectionCriteria = {\n\t\t\t\t...EmptySelectionCriteria,\n\t\t\t\treleaseGroups: [\"main\"],\n\t\t\t};\n\t\t\tconst filters: PackageFilterOptions = {\n\t\t\t\t...EmptyFilter,\n\t\t\t\tprivate: false,\n\t\t\t};\n\n\t\t\tconst { filtered } = await selectAndFilterPackages(fluidRepo, selectionOptions, filters);\n\t\t\tconst names = filtered.map((p) => p.name);\n\n\t\t\texpect(names).to.be.equalTo([\"pkg-a\", \"pkg-b\", \"@shared/shared\"]);\n\t\t});\n\n\t\tit(\"filter scopes\", async () => {\n\t\t\tconst fluidRepo = await fluidRepoPromise;\n\t\t\tconst selectionOptions: PackageSelectionCriteria = {\n\t\t\t\t...EmptySelectionCriteria,\n\t\t\t\treleaseGroups: [\"main\"],\n\t\t\t};\n\t\t\tconst filters: PackageFilterOptions = {\n\t\t\t\t...EmptyFilter,\n\t\t\t\tscope: [\"@shared\"],\n\t\t\t};\n\n\t\t\tconst { filtered } = await selectAndFilterPackages(fluidRepo, selectionOptions, filters);\n\t\t\tconst names = filtered.map((p) => p.name);\n\n\t\t\texpect(names).to.be.equalTo([\"@shared/shared\"]);\n\t\t});\n\n\t\tit(\"filter skipScopes\", async () => {\n\t\t\tconst fluidRepo = await fluidRepoPromise;\n\t\t\tconst selectionOptions: PackageSelectionCriteria = {\n\t\t\t\t...EmptySelectionCriteria,\n\t\t\t\treleaseGroups: [\"main\"],\n\t\t\t};\n\t\t\tconst filters: PackageFilterOptions = {\n\t\t\t\t...EmptyFilter,\n\t\t\t\tskipScope: [\"@shared\", \"@private\"],\n\t\t\t};\n\n\t\t\tconst { filtered } = await selectAndFilterPackages(fluidRepo, selectionOptions, filters);\n\t\t\tconst names = filtered.map((p) => p.name);\n\n\t\t\texpect(names).to.be.equalTo([\"pkg-a\", \"pkg-b\"]);\n\t\t});\n\t});\n\n\tdescribe(\"select workspace\", () => {\n\t\tit(\"all, no filters\", async () => {\n\t\t\tconst fluidRepo = await fluidRepoPromise;\n\t\t\tconst selectionOptions: PackageSelectionCriteria = {\n\t\t\t\t...EmptySelectionCriteria,\n\t\t\t\tworkspaces: [\"main\"],\n\t\t\t};\n\t\t\tconst filters: PackageFilterOptions = EmptyFilter;\n\n\t\t\tconst { selected } = await selectAndFilterPackages(fluidRepo, selectionOptions, filters);\n\t\t\tconst names = selected.map((p) => p.name);\n\n\t\t\texpect(names).to.be.equalTo([\n\t\t\t\t\"@group2/pkg-d\",\n\t\t\t\t\"@group2/pkg-e\",\n\t\t\t\t\"@group3/pkg-f\",\n\t\t\t\t\"@group3/pkg-g\",\n\t\t\t\t\"pkg-a\",\n\t\t\t\t\"pkg-b\",\n\t\t\t\t\"@private/pkg-c\",\n\t\t\t\t\"@shared/shared\",\n\t\t\t]);\n\t\t});\n\n\t\tit(\"select workspace root at repo root\", async () => {\n\t\t\tconst fluidRepo = await fluidRepoPromise;\n\t\t\tconst selectionOptions: PackageSelectionCriteria = {\n\t\t\t\t...EmptySelectionCriteria,\n\t\t\t\tworkspaceRoots: [\"main\"],\n\t\t\t};\n\t\t\tconst filters: PackageFilterOptions = EmptyFilter;\n\n\t\t\tconst { selected } = await selectAndFilterPackages(fluidRepo, selectionOptions, filters);\n\t\t\tconst dirs = selected.map((p) => fluidRepo.relativeToRepo(p.directory));\n\n\t\t\texpect(selected.length).to.equal(1);\n\t\t\texpect(dirs).to.be.containingAllOf([\"\"]);\n\t\t});\n\n\t\tit(\"select workspace root not at repo root\", async () => {\n\t\t\tconst fluidRepo = await fluidRepoPromise;\n\t\t\tconst selectionOptions: PackageSelectionCriteria = {\n\t\t\t\t...EmptySelectionCriteria,\n\t\t\t\tworkspaceRoots: [\"second\"],\n\t\t\t};\n\t\t\tconst filters: PackageFilterOptions = EmptyFilter;\n\n\t\t\tconst { selected } = await selectAndFilterPackages(fluidRepo, selectionOptions, filters);\n\t\t\tconst dirs = selected.map((p) => fluidRepo.relativeToRepo(p.directory));\n\n\t\t\texpect(selected.length).to.equal(1);\n\t\t\texpect(dirs).to.be.containingAllOf([\"second\"]);\n\t\t});\n\n\t\tit(\"filter private\", async () => {\n\t\t\tconst fluidRepo = await fluidRepoPromise;\n\t\t\tconst selectionOptions: PackageSelectionCriteria = {\n\t\t\t\t...EmptySelectionCriteria,\n\t\t\t\tworkspaces: [\"main\"],\n\t\t\t};\n\t\t\tconst filters: PackageFilterOptions = {\n\t\t\t\tprivate: true,\n\t\t\t\tscope: undefined,\n\t\t\t\tskipScope: undefined,\n\t\t\t};\n\n\t\t\tconst { filtered } = await selectAndFilterPackages(fluidRepo, selectionOptions, filters);\n\t\t\tconst names = filtered.map((p) => p.name);\n\n\t\t\texpect(names).to.be.containingAllOf([\"@private/pkg-c\"]);\n\t\t});\n\n\t\tit(\"filter non-private\", async () => {\n\t\t\tconst fluidRepo = await fluidRepoPromise;\n\t\t\tconst selectionOptions: PackageSelectionCriteria = {\n\t\t\t\t...EmptySelectionCriteria,\n\t\t\t\tworkspaces: [\"main\"],\n\t\t\t};\n\t\t\tconst filters: PackageFilterOptions = {\n\t\t\t\tprivate: false,\n\t\t\t\tscope: undefined,\n\t\t\t\tskipScope: undefined,\n\t\t\t};\n\n\t\t\tconst { filtered } = await selectAndFilterPackages(fluidRepo, selectionOptions, filters);\n\t\t\tconst names = filtered.map((p) => p.name);\n\n\t\t\texpect(names).to.be.equalTo([\n\t\t\t\t\"@group2/pkg-d\",\n\t\t\t\t\"@group2/pkg-e\",\n\t\t\t\t\"@group3/pkg-f\",\n\t\t\t\t\"@group3/pkg-g\",\n\t\t\t\t\"pkg-a\",\n\t\t\t\t\"pkg-b\",\n\t\t\t\t\"@shared/shared\",\n\t\t\t]);\n\t\t});\n\n\t\tit(\"filter scopes\", async () => {\n\t\t\tconst fluidRepo = await fluidRepoPromise;\n\t\t\tconst selectionOptions: PackageSelectionCriteria = {\n\t\t\t\t...EmptySelectionCriteria,\n\t\t\t\tworkspaces: [\"main\"],\n\t\t\t};\n\t\t\tconst filters: PackageFilterOptions = {\n\t\t\t\tprivate: undefined,\n\t\t\t\tscope: [\"@shared\"],\n\t\t\t\tskipScope: undefined,\n\t\t\t};\n\n\t\t\tconst { filtered } = await selectAndFilterPackages(fluidRepo, selectionOptions, filters);\n\t\t\tconst names = filtered.map((p) => p.name);\n\n\t\t\texpect(names).to.be.equalTo([\"@shared/shared\"]);\n\t\t});\n\n\t\tit(\"filter skipScopes\", async () => {\n\t\t\tconst fluidRepo = await fluidRepoPromise;\n\t\t\tconst selectionOptions: PackageSelectionCriteria = {\n\t\t\t\t...EmptySelectionCriteria,\n\t\t\t\tworkspaces: [\"main\"],\n\t\t\t};\n\t\t\tconst filters: PackageFilterOptions = {\n\t\t\t\tprivate: undefined,\n\t\t\t\tscope: undefined,\n\t\t\t\tskipScope: [\"@shared\", \"@private\", \"@group3\"],\n\t\t\t};\n\n\t\t\tconst { filtered } = await selectAndFilterPackages(fluidRepo, selectionOptions, filters);\n\t\t\tconst names = filtered.map((p) => p.name);\n\n\t\t\texpect(names).to.be.equalTo([\"@group2/pkg-d\", \"@group2/pkg-e\", \"pkg-a\", \"pkg-b\"]);\n\t\t});\n\t});\n\n\tdescribe(\"combination workspace and release group\", () => {\n\t\tconst filters: PackageFilterOptions = EmptyFilter;\n\n\t\tit(\"selects workspace and disjoint release group\", async () => {\n\t\t\tconst fluidRepo = await fluidRepoPromise;\n\t\t\tconst selectionOptions: PackageSelectionCriteria = {\n\t\t\t\t...EmptySelectionCriteria,\n\t\t\t\tworkspaces: [\"second\"],\n\t\t\t\treleaseGroups: [\"group2\"],\n\t\t\t};\n\n\t\t\tconst { filtered } = await selectAndFilterPackages(fluidRepo, selectionOptions, filters);\n\t\t\tconst names = filtered.map((p) => p.name);\n\n\t\t\texpect(names).to.be.equalTo([\n\t\t\t\t\"other-pkg-a\",\n\t\t\t\t\"other-pkg-b\",\n\t\t\t\t\"@group2/pkg-d\",\n\t\t\t\t\"@group2/pkg-e\",\n\t\t\t]);\n\t\t});\n\t});\n\n\tit(\"selects all release groups\", async () => {\n\t\tconst fluidRepo = await fluidRepoPromise;\n\t\tconst selectionOptions: PackageSelectionCriteria = {\n\t\t\t...EmptySelectionCriteria,\n\t\t\treleaseGroups: [\"*\"],\n\t\t};\n\n\t\tconst { filtered } = await selectAndFilterPackages(\n\t\t\tfluidRepo,\n\t\t\tselectionOptions,\n\t\t\tEmptyFilter,\n\t\t);\n\t\tconst names = filtered.map((p) => p.name).sort();\n\n\t\texpect(names).to.be.equalTo(\n\t\t\t[\n\t\t\t\t\"@group2/pkg-d\",\n\t\t\t\t\"@group2/pkg-e\",\n\t\t\t\t\"@group3/pkg-f\",\n\t\t\t\t\"@group3/pkg-g\",\n\t\t\t\t\"@private/pkg-c\",\n\t\t\t\t\"@shared/shared\",\n\t\t\t\t\"other-pkg-a\",\n\t\t\t\t\"other-pkg-b\",\n\t\t\t\t\"pkg-a\",\n\t\t\t\t\"pkg-b\",\n\t\t\t].sort(),\n\t\t);\n\t});\n});\n"]}