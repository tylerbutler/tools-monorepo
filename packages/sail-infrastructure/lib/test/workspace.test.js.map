{"version":3,"file":"workspace.test.js","sourceRoot":"","sources":["../../src/test/workspace.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { strict as assert } from \"node:assert\";\nimport { rm } from \"node:fs/promises\";\nimport * as path from \"node:path\";\n\nimport { expect } from \"chai\";\nimport { describe, it } from \"mocha\";\n\nimport { loadBuildProject } from \"../buildProject.js\";\nimport type { PackageName, WorkspaceName } from \"../types.js\";\n\nimport { testRepoRoot } from \"./init.js\";\n\ndescribe(\"workspaces\", () => {\n\tconst repo = loadBuildProject(testRepoRoot);\n\tconst workspace = repo.workspaces.get(\"main\" as WorkspaceName);\n\n\tdescribe(\"lockfile outdated\", () => {\n\t\tconst pkg = repo.packages.get(\"@group2/pkg-e\" as PackageName);\n\t\tassert(pkg !== undefined);\n\n\t\tbeforeEach(async () => {\n\t\t\tpkg.packageJson.dependencies = {\n\t\t\t\t\"empty-npm-package\": \"1.0.0\",\n\t\t\t};\n\t\t\tawait pkg.savePackageJson();\n\t\t});\n\n\t\tafterEach(async () => {\n\t\t\tpkg.packageJson.dependencies = {};\n\t\t\tawait pkg.savePackageJson();\n\t\t});\n\n\t\t// TODO: Test will be enabled in a follow-up change\n\t\t// it(\"install succeeds when updateLockfile=true\", async () => {\n\t\t// \tawait assert.rejects(async () => {\n\t\t// \t\tawait workspace?.install(true);\n\t\t// \t});\n\t\t// });\n\n\t\tit(\"install fails when updateLockfile=false\", async () => {\n\t\t\tawait assert.rejects(\n\t\t\t\tasync () => {\n\t\t\t\t\tawait workspace?.install(false);\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"Error\",\n\t\t\t\t\t// Note: This assumes we are using pnpm as the package manager. Other package managers will throw different\n\t\t\t\t\t// errors.\n\t\t\t\t\tmessage: /.*ERR_PNPM_OUTDATED_LOCKFILE.*/,\n\t\t\t\t},\n\t\t\t);\n\t\t});\n\t});\n\n\tdescribe(\"not installed\", () => {\n\t\tbeforeEach(async () => {\n\t\t\ttry {\n\t\t\t\tawait rm(path.join(repo.root, \"node_modules\"), { recursive: true, force: true });\n\t\t\t} catch {\n\t\t\t\t// nothing\n\t\t\t}\n\t\t});\n\n\t\tit(\"checkInstall returns errors when node_modules is missing\", async () => {\n\t\t\tconst actual = await workspace?.checkInstall();\n\t\t\texpect(actual).not.to.be.true;\n\t\t\texpect((actual as string[])[0]).to.include(\": node_modules not installed in\");\n\t\t});\n\n\t\tit(\"install succeeds\", async () => {\n\t\t\tawait assert.doesNotReject(async () => {\n\t\t\t\tawait workspace?.install(false);\n\t\t\t});\n\t\t});\n\t});\n});\n"]}